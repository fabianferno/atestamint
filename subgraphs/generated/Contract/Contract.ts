// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DropCreated extends ethereum.Event {
  get params(): DropCreated__Params {
    return new DropCreated__Params(this);
  }
}

export class DropCreated__Params {
  _event: DropCreated;

  constructor(event: DropCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dropAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vaultAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get editionSize(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get metadataContractURI(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class EditionCreated extends ethereum.Event {
  get params(): EditionCreated__Params {
    return new EditionCreated__Params(this);
  }
}

export class EditionCreated__Params {
  _event: EditionCreated;

  constructor(event: EditionCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get editionAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vaultAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get editionSize(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get metadataContractURI(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  SETUP_VAULT_METHOD_ID(): Bytes {
    let result = super.call(
      "SETUP_VAULT_METHOD_ID",
      "SETUP_VAULT_METHOD_ID():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_SETUP_VAULT_METHOD_ID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SETUP_VAULT_METHOD_ID",
      "SETUP_VAULT_METHOD_ID():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  _deployProxy(implementation: Address, salt: BigInt): Address {
    let result = super.call(
      "_deployProxy",
      "_deployProxy(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(implementation),
        ethereum.Value.fromUnsignedBigInt(salt)
      ]
    );

    return result[0].toAddress();
  }

  try__deployProxy(
    implementation: Address,
    salt: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_deployProxy",
      "_deployProxy(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(implementation),
        ethereum.Value.fromUnsignedBigInt(salt)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  i_zoraNftFactory(): Address {
    let result = super.call(
      "i_zoraNftFactory",
      "i_zoraNftFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_i_zoraNftFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "i_zoraNftFactory",
      "i_zoraNftFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nonce(): BigInt {
    let result = super.call("nonce", "nonce():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nonce(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonce", "nonce():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  schemaId(): Bytes {
    let result = super.call("schemaId", "schemaId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_schemaId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("schemaId", "schemaId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  vaultImplementation(): Address {
    let result = super.call(
      "vaultImplementation",
      "vaultImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_vaultImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "vaultImplementation",
      "vaultImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get zoraNftFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _deployProxyCall extends ethereum.Call {
  get inputs(): _deployProxyCall__Inputs {
    return new _deployProxyCall__Inputs(this);
  }

  get outputs(): _deployProxyCall__Outputs {
    return new _deployProxyCall__Outputs(this);
  }
}

export class _deployProxyCall__Inputs {
  _call: _deployProxyCall;

  constructor(call: _deployProxyCall) {
    this._call = call;
  }

  get implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get salt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class _deployProxyCall__Outputs {
  _call: _deployProxyCall;

  constructor(call: _deployProxyCall) {
    this._call = call;
  }

  get _contractAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateDropCollectionCall extends ethereum.Call {
  get inputs(): CreateDropCollectionCall__Inputs {
    return new CreateDropCollectionCall__Inputs(this);
  }

  get outputs(): CreateDropCollectionCall__Outputs {
    return new CreateDropCollectionCall__Outputs(this);
  }
}

export class CreateDropCollectionCall__Inputs {
  _call: CreateDropCollectionCall;

  constructor(call: CreateDropCollectionCall) {
    this._call = call;
  }

  get inputParams(): CreateDropCollectionCallInputParamsStruct {
    return changetype<CreateDropCollectionCallInputParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateDropCollectionCall__Outputs {
  _call: CreateDropCollectionCall;

  constructor(call: CreateDropCollectionCall) {
    this._call = call;
  }
}

export class CreateDropCollectionCallInputParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get editionSize(): BigInt {
    return this[2].toBigInt();
  }

  get royaltyBPS(): i32 {
    return this[3].toI32();
  }

  get saleConfig(): CreateDropCollectionCallInputParamsSaleConfigStruct {
    return changetype<CreateDropCollectionCallInputParamsSaleConfigStruct>(
      this[4].toTuple()
    );
  }

  get metadataURIBase(): string {
    return this[5].toString();
  }

  get metadataContractURI(): string {
    return this[6].toString();
  }
}

export class CreateDropCollectionCallInputParamsSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class CreateEditionCollectionCall extends ethereum.Call {
  get inputs(): CreateEditionCollectionCall__Inputs {
    return new CreateEditionCollectionCall__Inputs(this);
  }

  get outputs(): CreateEditionCollectionCall__Outputs {
    return new CreateEditionCollectionCall__Outputs(this);
  }
}

export class CreateEditionCollectionCall__Inputs {
  _call: CreateEditionCollectionCall;

  constructor(call: CreateEditionCollectionCall) {
    this._call = call;
  }

  get inputParams(): CreateEditionCollectionCallInputParamsStruct {
    return changetype<CreateEditionCollectionCallInputParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateEditionCollectionCall__Outputs {
  _call: CreateEditionCollectionCall;

  constructor(call: CreateEditionCollectionCall) {
    this._call = call;
  }
}

export class CreateEditionCollectionCallInputParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get editionSize(): BigInt {
    return this[2].toBigInt();
  }

  get royaltyBPS(): i32 {
    return this[3].toI32();
  }

  get saleConfig(): CreateEditionCollectionCallInputParamsSaleConfigStruct {
    return changetype<CreateEditionCollectionCallInputParamsSaleConfigStruct>(
      this[4].toTuple()
    );
  }

  get description(): string {
    return this[5].toString();
  }

  get animationURI(): string {
    return this[6].toString();
  }

  get imageURI(): string {
    return this[7].toString();
  }

  get metadataContractURI(): string {
    return this[8].toString();
  }
}

export class CreateEditionCollectionCallInputParamsSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class UpdateSchemaIdCall extends ethereum.Call {
  get inputs(): UpdateSchemaIdCall__Inputs {
    return new UpdateSchemaIdCall__Inputs(this);
  }

  get outputs(): UpdateSchemaIdCall__Outputs {
    return new UpdateSchemaIdCall__Outputs(this);
  }
}

export class UpdateSchemaIdCall__Inputs {
  _call: UpdateSchemaIdCall;

  constructor(call: UpdateSchemaIdCall) {
    this._call = call;
  }

  get _schemaId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UpdateSchemaIdCall__Outputs {
  _call: UpdateSchemaIdCall;

  constructor(call: UpdateSchemaIdCall) {
    this._call = call;
  }
}

export class UpdateVaultImplementationCall extends ethereum.Call {
  get inputs(): UpdateVaultImplementationCall__Inputs {
    return new UpdateVaultImplementationCall__Inputs(this);
  }

  get outputs(): UpdateVaultImplementationCall__Outputs {
    return new UpdateVaultImplementationCall__Outputs(this);
  }
}

export class UpdateVaultImplementationCall__Inputs {
  _call: UpdateVaultImplementationCall;

  constructor(call: UpdateVaultImplementationCall) {
    this._call = call;
  }

  get _vaultImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateVaultImplementationCall__Outputs {
  _call: UpdateVaultImplementationCall;

  constructor(call: UpdateVaultImplementationCall) {
    this._call = call;
  }
}
