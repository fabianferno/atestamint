type DropCreated @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  dropAddress: Bytes! # address
  vaultAddress: Bytes! # address
  editionSize: BigInt! # uint64
  metadataContractURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EditionCreated @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  editionAddress: Bytes! # address
  vaultAddress: Bytes! # address
  editionSize: BigInt! # uint64
  metadataContractURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type FundsUnlocked @entity(immutable: true) {
  id: Bytes!
  amount: BigInt! # uint256
  forVotes: BigInt! # uint256
  editionSize: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TestingData @entity(immutable: true) {
  id: Bytes!
  _nftContract: Bytes! # address
  tokenId: BigInt! # uint256
  description: String! # string
  isPositive: Boolean! # bool
  signal: Bytes! # address
  root: BigInt! # uint256
  nullifierHash: BigInt! # uint256
  proof: [BigInt!]! # uint256[8]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Voted @entity(immutable: true) {
  id: Bytes!
  voter: Bytes! # address
  tokenId: BigInt! # uint256
  description: String! # string
  nulllifierHash: BigInt! # uint256
  isFor: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
